{"version":3,"sources":["js/main.js"],"names":["API_KEY","ENDPOINT","resultDisplay","el","data","price","date","symbol","querySelector","innerHTML","Number","toFixed","toUpperCase","includes","fetchTickerData","evt","preventDefault","target","elements","value","fetch","then","response","json","Error","document","console","log","catch","err","alert","addEventListener"],"mappings":"AAAA;AAEA;;AACA,IAAMA,OAAO,GAAG,kBAAhB;AACA;;AAEA,IAAMC,QAAQ,GAAG,6CAAjB;AACA;;;;;;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,IAAL,EAAc;AAAA,0BAK9BA,IAAI,CAAC,cAAD,CAL0B;AAAA,MAEnBC,KAFmB,qBAEhC,WAFgC;AAAA,MAGNC,IAHM,qBAGhC,wBAHgC;AAAA,MAIlBC,MAJkB,qBAIhC,YAJgC;AAMlCJ,EAAAA,EAAE,CAACK,aAAH,CAAiB,QAAjB,EAA2BC,SAA3B,cAA2CC,MAAM,CAACL,KAAD,CAAN,CAAcM,OAAd,CAAsB,CAAtB,CAA3C;AACAR,EAAAA,EAAE,CAACK,aAAH,CAAiB,SAAjB,EAA4BC,SAA5B,GAAwCF,MAAM,CAACK,WAAP,EAAxC;AACAT,EAAAA,EAAE,CAACK,aAAH,CAAiB,OAAjB,EAA0BC,SAA1B,aAAyCH,IAAzC,cAAiDA,IAAI,CAACO,QAAL,CAAc,GAAd,IAAqBP,IAArB,GAA4B,EAA7E;AACD,CATD;AAUA;;;;;;AAMA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,GAAG,EAAI;AAC7BA,EAAAA,GAAG,CAACC,cAAJ,GAD6B,CACP;;AAEtB,MAAMT,MAAM,GAAGQ,GAAG,CAACE,MAAJ,CAAWC,QAAX,CAAoB,QAApB,EAA8BC,KAA7C;AACAC,EAAAA,KAAK,WAAInB,QAAJ,iCAAmCM,MAAnC,qBAAoDP,OAApD,EAAL,CAAoEqB,IAApE,CAAyE,UAAAC,QAAQ,EAAI;AACnF,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAFD,EAEGF,IAFH,CAEQ,UAAAjB,IAAI,EAAI;AACd;AACA,QAAIA,IAAI,CAAC,eAAD,CAAR,EAA2B;AACzB;AACA,YAAM,IAAIoB,KAAJ,mDAAN;AACD;;AAEDtB,IAAAA,aAAa,CAACuB,QAAQ,CAACjB,aAAT,CAAuB,gBAAvB,CAAD,EAA2CJ,IAA3C,CAAb;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACD,GAXD,EAWGwB,KAXH,CAWS,UAAAC,GAAG,EAAI;AACd;AACAC,IAAAA,KAAK,+BAAwBD,GAAxB,EAAL;AACD,GAdD;AAeD,CAnBD,EAmBG;;;AAGHJ,QAAQ,CAACjB,aAAT,CAAuB,aAAvB,EAAsCuB,gBAAtC,CAAuD,QAAvD,EAAiEjB,eAAjE","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["\"use strict\";\r\n\r\n/** API key for signing the request */\r\nconst API_KEY = 'D600F8I0CUP4QEX2';\r\n/** Alpha Vantage REST endpoint */\r\n\r\nconst ENDPOINT = 'https://www.alphavantage.co/query?function=';\r\n/**\r\n * Display the current price and other information for a stock.\r\n * @param {HTMLElement} el DOM element parent for the display of the data. Must\r\n * contain a .symbol, .price, and .date elements.\r\n * @param {Object} data The returned stock symbol data\r\n */\r\n\r\nconst resultDisplay = (el, data) => {\r\n  let {\r\n    '05. price': price,\r\n    '07. latest trading day': date,\r\n    '01. symbol': symbol\r\n  } = data['Global Quote'];\r\n  el.querySelector('.price').innerHTML = `$${Number(price).toFixed(2)}`;\r\n  el.querySelector('.symbol').innerHTML = symbol.toUpperCase();\r\n  el.querySelector('.date').innerHTML = `${date} ${date.includes(':') ? date : ''}`;\r\n};\r\n/**\r\n * Handle symbol form submit to fetch the desired symbol information.\r\n * @param {Event} evt Event object for this listener function\r\n */\r\n\r\n\r\nconst fetchTickerData = evt => {\r\n  evt.preventDefault(); // get the symbol\r\n\r\n  const symbol = evt.target.elements['symbol'].value;\r\n  fetch(`${ENDPOINT}GLOBAL_QUOTE&symbol=${symbol}&apikey=${API_KEY}`).then(response => {\r\n    return response.json();\r\n  }).then(data => {\r\n    // log and export all data\r\n    if (data['Error Message']) {\r\n      // BONUS\r\n      throw new Error(`There was an error. Please enter a valid symbol`);\r\n    }\r\n\r\n    resultDisplay(document.querySelector('.stock-display'), data);\r\n    console.log(data);\r\n  }).catch(err => {\r\n    // BONUS\r\n    alert(`There was an error: ${err}`);\r\n  });\r\n}; // add the submit listener\r\n\r\n\r\ndocument.querySelector('.frm.symbol').addEventListener('submit', fetchTickerData);"]}